{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onSubmit","useState","setTitle","wasFilmFound","setSearchResult","film","setFoundFilm","htmlFor","type","id","value","placeholder","classnames","onChange","target","onClick","fetch","then","response","json","Response","foundFilm","Title","Plot","Poster","imdbID","App","state","data","addMovie","isAlreadyInTheList","setState","some","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79eca7e9.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=97f17f88&t=';\n\nexport const FindMovie = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [wasFilmFound, setSearchResult] = useState(true);\n  const [film, setFoundFilm] = useState(null);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classnames(\n                'input',\n                {\n                  'is-danger': !wasFilmFound,\n                },\n              )}\n              onChange={({ target }) => {\n                setTitle(target.value);\n                setSearchResult(true);\n              }}\n            />\n          </div>\n\n          {!wasFilmFound\n          && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                if (title === '') {\n                  setSearchResult(false);\n                  setFoundFilm(null);\n\n                  return;\n                }\n\n                fetch(BASE_URL + title)\n                  .then(response => response.json())\n                  .then((movie) => {\n                    if (movie.Response === 'False') {\n                      setFoundFilm(null);\n                      setSearchResult(false);\n\n                      return;\n                    }\n\n                    const foundFilm = {\n                      title: movie.Title,\n                      description: movie.Plot,\n                      imgUrl: movie.Poster,\n                      imdbId: movie.imdbID,\n                      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n                    };\n\n                    setFoundFilm(foundFilm);\n                    setSearchResult(true);\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (!film) {\n                  return;\n                }\n\n                onSubmit(film);\n\n                setTitle('');\n                setFoundFilm(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {film && <MovieCard {...film} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (!this.isAlreadyInTheList(movie)) {\n      this.setState(state => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  };\n\n  isAlreadyInTheList = movie => this.state.movies\n    .some(film => movie.imdbId === film.imdbId)\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie onSubmit={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}